name: Node.js Package

on:
  push:
    branches:
      - extended-github-action

jobs:
  install-and-version:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
    permissions:
      contents: write  # Ensure GitHub Actions can push changes
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true # Ensures authentication works
          fetch-depth: 0  # Ensure full commit history is fetched

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Dependencies (Force Update Lockfile)
        run: pnpm install --no-frozen-lockfile

      - name: Install Changesets CLI in Workspace
        run: pnpm add -w -D @changesets/cli

      - name: Configure Git
        run: |
          git config --global user.name "ThilinaV98"
          git config --global user.email "thilinavithana98@gmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Determine Version Bump from Commit Message
        id: check_version
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)

          if [[ "$LAST_COMMIT_MESSAGE" == *"BREAKING CHANGE:"* ]]; then
            VERSION_TYPE="major"
          elif [[ "$LAST_COMMIT_MESSAGE" == *"feat:"* ]]; then
            VERSION_TYPE="minor"
          elif [[ "$LAST_COMMIT_MESSAGE" == *"fix:"* ]]; then
            VERSION_TYPE="patch"
          else
            VERSION_TYPE="patch" # Default to patch if no keyword is found
          fi

          echo "Detected version bump: $VERSION_TYPE"
          echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_ENV
          echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_OUTPUT

      - name: Create Changeset Based on Detected Version
        run: |
          mkdir -p .changeset
          echo -e "---\n\"@thilinav98/digieye-types\": $VERSION_TYPE\n\"@thilinav98/digiex-types\": $VERSION_TYPE\n---\n\nAutomated version bump based on commit message." > .changeset/auto-changeset.md
          git add .changeset
          git commit -m "chore: add automated changeset"

      - name: Apply Version Changes (Changesets)
        id: apply_version
        run: |
          git fetch origin extended-github-action
          git pull --rebase origin extended-github-action || git rebase --skip
          pnpm changeset version
          git add .
          git commit -m "chore: apply version bumps via changesets"
          git push origin extended-github-action || (git pull --rebase origin extended-github-action && git push origin extended-github-action)
          echo "has_changes=true" >> $GITHUB_ENV
          echo "has_changes=true" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build:
    needs: install-and-version
    runs-on: ubuntu-latest
    if: needs.install-and-version.outputs.has_changes == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run Build
        run: pnpm run build

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository and Pull Latest Changes
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0  # Ensure full history is fetched

      - name: Ensure Latest Changes Are Applied
        run: |
          git fetch origin extended-github-action
          git reset --hard origin/extended-github-action

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Publish DigiEx Package (Force Publish)
        run: |
          cd packages/DigiEx
          pnpm publish --no-git-checks --registry=https://npm.pkg.github.com/ || echo "No changes detected"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Publish DigiEye Package (Force Publish)
        run: |
          cd packages/Digieye
          pnpm publish --no-git-checks --registry=https://npm.pkg.github.com/ || echo "No changes detected"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
