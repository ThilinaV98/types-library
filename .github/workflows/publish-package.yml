name: Node.js Package

on:
  push:
    branches:
      - extended-github-action

jobs:
  install-and-version:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true # Allows pushing version changes

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Dependencies (Force Update Lockfile)
        run: pnpm install --no-frozen-lockfile

      - name: Install Changesets CLI in Workspace
        run: pnpm add -w -D @changesets/cli

      - name: Configure Git
        run: |
          git config --global user.name "ThilinaV98"
          git config --global user.email "thilinavithana98@gmail.com"

      - name: Ensure .changeset Folder Exists
        run: |
          if [ ! -d ".changeset" ]; then pnpm changeset init; fi

      - name: Auto-create a Changeset (if missing)
        id: check_changes
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes detected, skipping changeset creation"
            echo "has_changes=false" >> $GITHUB_ENV
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Creating a new changeset..."
            echo -e "---\n\"@thilinav98/digieye-types\": major\n\"@thilinav98/digiex-types\": major\n---\n\nAutomated version bump for all packages" > .changeset/auto-changeset.md
            git add .changeset
            git commit -m "chore: add automated changeset"
            echo "has_changes=true" >> $GITHUB_ENV
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Apply Version Changes (Changesets)
        id: apply_version
        run: |
          pnpm changeset version
          git add .
          git commit -m "chore: apply version bumps via changesets"
          git push origin extended-github-action
          echo "has_changes=true" >> $GITHUB_ENV
          echo "has_changes=true" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build:
    needs: install-and-version
    runs-on: ubuntu-latest
    if: needs.install-and-version.outputs.has_changes == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run Build
        run: pnpm run build

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Publish DigiEx Package (Force Publish)
        run: |
          cd packages/DigiEx
          pnpm publish --no-git-checks --registry=https://npm.pkg.github.com/ || echo "No changes detected"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Publish DigiEye Package (Force Publish)
        run: |
          cd packages/Digieye
          pnpm publish --no-git-checks --registry=https://npm.pkg.github.com/ || echo "No changes detected"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
